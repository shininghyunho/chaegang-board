# google
spring.security.oauth2.client.registration.google.client-id=505384482204-lauqpldrb63h5of7k5uq544h3101lg49.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=_VgUeZrC_U2-XwkAxVguxeHM
## openid라는 scope가 있으면 Open Id Provider로 인식해서 하나의 OAuth2Service로 사용하기 위함
spring.security.oauth2.client.registration.google.scope=profile,email

# naver
spring.security.oauth2.client.registration.naver.client-id=LEIZ84tpcZL2Cf5iUmDd
spring.security.oauth2.client.registration.naver.client-secret=m6qpgzKHYK
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization_grant_type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver
## provider
spring.security.oauth2.client.provider.naver.authorization_uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token_uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
### json 형태에서 response 를 가져옴
spring.security.oauth2.client.provider.naver.user_name_attribute=response